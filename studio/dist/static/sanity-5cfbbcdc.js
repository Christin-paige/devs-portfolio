import{defineType as d,defineField as l,defineConfig as T,renderStudio as N}from"sanity";import{structureTool as I}from"sanity/structure";import{visionTool as O}from"@sanity/vision";const w=d({name:"gallery",title:"Gallery",type:"document",fields:[l({name:"title",title:"Title",type:"string"}),l({name:"slug",type:"slug",options:{source:"title"},validation:e=>e.required()}),l({name:"description",title:"Description",type:"text"}),l({name:"photos",title:"Photos",type:"image"}),l({name:"category",title:"Category",type:"string",options:{list:[{title:"Wildlife",value:"wildlife"},{title:"Astro",value:"astro"},{title:"Out and About",value:"out-and-about"}]}})]}),V=d({name:"about",title:"About",type:"document",fields:[l({name:"title",title:"Title",type:"string"}),l({name:"slug",type:"slug",options:{source:"title"},validation:e=>e.required()}),l({name:"profileImage",title:"Image",type:"image"}),l({name:"contactInfo",title:"Contact Information",type:"object",fields:[{name:"email",title:"Email",type:"string"},{name:"phone",title:"Phone",type:"string"},{name:"location",title:"Location",type:"string"}]})]}),A=d({name:"contact",title:"Contact",type:"document",fields:[l({name:"email",title:"Email",type:"string"}),l({name:"phone",title:"Phone",type:"string"}),d({name:"address",title:"Address",type:"string"}),d({name:"socialLinks",title:"Social Links",type:"array",of:[{type:"object",fields:[{name:"platform",title:"Platform",type:"string"},{name:"url",title:"URL",type:"url"}]}]})]}),j=d({name:"category",title:"Category",type:"document",fields:[l({name:"title",title:"Title",type:"string"}),l({name:"slug",type:"slug",options:{source:"title"},validation:e=>e.required()}),l({name:"description",title:"Description",type:"text"})]}),$=d({name:"photo",title:"Photo",type:"document",fields:[l({name:"title",title:"Title",type:"string"}),l({name:"image",title:"Image",type:"image",options:{hotspot:!0}}),l({name:"category",title:"Category",type:"string",options:{list:[{title:"Wildlife",value:"wildlife"},{title:"Astro",value:"astro"},{title:"Out and About",value:"out-and-about"}]}}),l({name:"slug",type:"slug",options:{source:"title"},validation:e=>e.required()}),l({name:"tags",title:"Tags",type:"array",of:[{type:"string"}]}),l({name:"dateTaken",title:"Date Taken",type:"date"})]}),k=[w,V,A,j,$];function x(e){if(e.__esModule)return e;var n=e.default;if(typeof n=="function"){var t=function o(){return this instanceof o?Reflect.construct(n,arguments,this.constructor):n.apply(this,arguments)};t.prototype=n.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(e).forEach(function(o){var i=Object.getOwnPropertyDescriptor(e,o);Object.defineProperty(t,o,i.get?i:{enumerable:!0,get:function(){return e[o]}})}),t}var p={exports:{}};const L={},P=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"})),y=x(P),Y="dotenv",R="16.4.5",K="Loads environment variables from .env file",S="lib/main.js",C="lib/main.d.ts",M={".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},B={"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},F={type:"git",url:"git://github.com/motdotla/dotenv.git"},U="https://dotenvx.com",q=["dotenv","env",".env","environment","variables","config","settings"],W="README.md",G="BSD-2-Clause",J={"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},Q={node:">=12"},z={fs:!1},H={name:Y,version:R,description:K,main:S,types:C,exports:M,scripts:B,repository:F,funding:U,keywords:q,readmeFilename:W,license:G,devDependencies:J,engines:Q,browser:z},v=y,h=y,X=y,Z=y,ee=H,E=ee.version,te=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function ne(e){const n={};let t=e.toString();t=t.replace(/\r\n?/mg,`
`);let o;for(;(o=te.exec(t))!=null;){const i=o[1];let r=o[2]||"";r=r.trim();const s=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),s==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),n[i]=r}return n}function re(e){const n=D(e),t=c.configDotenv({path:n});if(!t.parsed){const s=new Error(`MISSING_DATA: Cannot parse ${n} for an unknown reason`);throw s.code="MISSING_DATA",s}const o=b(e).split(","),i=o.length;let r;for(let s=0;s<i;s++)try{const a=o[s].trim(),u=ie(t,a);r=c.decrypt(u.ciphertext,u.key);break}catch(a){if(s+1>=i)throw a}return c.parse(r)}function oe(e){console.log(`[dotenv@${E}][INFO] ${e}`)}function se(e){console.log(`[dotenv@${E}][WARN] ${e}`)}function m(e){console.log(`[dotenv@${E}][DEBUG] ${e}`)}function b(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:{}.DOTENV_KEY&&{}.DOTENV_KEY.length>0?{}.DOTENV_KEY:""}function ie(e,n){let t;try{t=new URL(n)}catch(a){if(a.code==="ERR_INVALID_URL"){const u=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw u.code="INVALID_DOTENV_KEY",u}throw a}const o=t.password;if(!o){const a=new Error("INVALID_DOTENV_KEY: Missing key part");throw a.code="INVALID_DOTENV_KEY",a}const i=t.searchParams.get("environment");if(!i){const a=new Error("INVALID_DOTENV_KEY: Missing environment part");throw a.code="INVALID_DOTENV_KEY",a}const r=`DOTENV_VAULT_${i.toUpperCase()}`,s=e.parsed[r];if(!s){const a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw a.code="NOT_FOUND_DOTENV_ENVIRONMENT",a}return{ciphertext:s,key:o}}function D(e){let n=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const t of e.path)v.existsSync(t)&&(n=t.endsWith(".vault")?t:`${t}.vault`);else n=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else n=h.resolve(process.cwd(),".env.vault");return v.existsSync(n)?n:null}function _(e){return e[0]==="~"?h.join(X.homedir(),e.slice(1)):e}function ae(e){oe("Loading env from encrypted .env.vault");const n=c._parseVault(e);let t=process.env;return e&&e.processEnv!=null&&(t=e.processEnv),c.populate(t,n,e),{parsed:n}}function le(e){const n=h.resolve(process.cwd(),".env");let t="utf8";const o=!!(e&&e.debug);e&&e.encoding?t=e.encoding:o&&m("No encoding is specified. UTF-8 is used by default");let i=[n];if(e&&e.path)if(!Array.isArray(e.path))i=[_(e.path)];else{i=[];for(const u of e.path)i.push(_(u))}let r;const s={};for(const u of i)try{const f=c.parse(v.readFileSync(u,{encoding:t}));c.populate(s,f,e)}catch(f){o&&m(`Failed to load ${u} ${f.message}`),r=f}let a=process.env;return e&&e.processEnv!=null&&(a=e.processEnv),c.populate(a,s,e),r?{parsed:s,error:r}:{parsed:s}}function ce(e){if(b(e).length===0)return c.configDotenv(e);const n=D(e);return n?c._configVault(e):(se(`You set DOTENV_KEY but you are missing a .env.vault file at ${n}. Did you forget to build it?`),c.configDotenv(e))}function ue(e,n){const t=Buffer.from(n.slice(-64),"hex");let o=Buffer.from(e,"base64");const i=o.subarray(0,12),r=o.subarray(-16);o=o.subarray(12,-16);try{const s=Z.createDecipheriv("aes-256-gcm",t,i);return s.setAuthTag(r),`${s.update(o)}${s.final()}`}catch(s){const a=s instanceof RangeError,u=s.message==="Invalid key length",f=s.message==="Unsupported state or unable to authenticate data";if(a||u){const g=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw g.code="INVALID_DOTENV_KEY",g}else if(f){const g=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw g.code="DECRYPTION_FAILED",g}else throw s}}function pe(e,n,t={}){const o=!!(t&&t.debug),i=!!(t&&t.override);if(typeof n!="object"){const r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(const r of Object.keys(n))Object.prototype.hasOwnProperty.call(e,r)?(i===!0&&(e[r]=n[r]),o&&m(i===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=n[r]}const c={configDotenv:le,_configVault:ae,_parseVault:re,config:ce,decrypt:ue,parse:ne,populate:pe};p.exports.configDotenv=c.configDotenv;p.exports._configVault=c._configVault;p.exports._parseVault=c._parseVault;var de=p.exports.config=c.config;p.exports.decrypt=c.decrypt;p.exports.parse=c.parse;p.exports.populate=c.populate;p.exports=c;de();const fe=T({name:"default",title:"devs-portfolio",projectId:{}.SANITY_PROJECT_ID,dataset:{}.SANITY_DATASET,plugins:[I(),O()],schema:{types:k}});N(document.getElementById("sanity"),fe,{reactStrictMode:!1,basePath:"/"});
